name: PPAP CI

on: push

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Enable Buildx
        uses: docker/setup-buildx-action@v1

      - name: Test Docker Build
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: builder

  staging_deploy:
    needs: build
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Enable Buildx
        uses: docker/setup-buildx-action@v1

      - name: Deploy Docker Build
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Staging Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_NAME: ${{ secrets.STAGING_PROJECT_NAME }}
          IMAGE_ID: ${{ steps.build-image.outputs.imageid }}
        run: |
          docker run -e FIREBASE_TOKEN -e PROJECT_NAME $IMAGE_ID

  production_deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Enable Buildx
        uses: docker/setup-buildx-action@v1

      - name: Deploy Docker Build
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Production Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_NAME: ${{ secrets.PRODUCTION_PROJECT_NAME }}
          IMAGE_ID: ${{ steps.build-image.outputs.imageid }}
        run: |
          docker run -e FIREBASE_TOKEN -e PROJECT_NAME $IMAGE_ID
